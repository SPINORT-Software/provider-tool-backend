version: '3.8'

services:
  web:
    build: .
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
    links:
      - db:db
      - redis:redis
    networks:
      - backend

  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    command:
      - redis-server
    networks:
      - backend

  db:
    image: postgres:13.0-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=providertool
      - POSTGRES_USER=providertool-admin
      - POSTGRES_PASSWORD=provider-tool
    networks:
      - backend


#  frontend:
#    restart: always
#    command: nodemon
#    build:
#      context: ./frontend/
#      dockerfile: Dockerfile
#    volumes:
#      - /app/frontend/node_modules
#      - .:/app/frontend
#    ports:
#      - "3000:3000"
#    stdin_open: true
#    depends_on:
#      - web
#    networks:
#      - backend
#    environment:
#      - CHOKIDAR_USEPOLLING=true

volumes:
  postgres_data:

networks:
  backend:
    name: backend
    driver: bridge